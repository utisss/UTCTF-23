# Special thanks to Ella Rose's StackOverflow answer
# https://crypto.stackexchange.com/questions/67612/aes-oracle-with-bad-s-box

from aes import AES
from pwn import *
import sys

zero_plaintext = b"00"*16

conn = remote("puffer.utctf.live",52584)
conn.recvuntil(b": ")
conn.sendline(zero_plaintext)
ek = bytes.fromhex(conn.recvline().decode())
conn.close()

aes = AES()
ciphertext = bytes.fromhex(sys.argv[1])
aes.addRoundKey = lambda state, _: state
decrypted = b""


for i in range(0, len(ciphertext), 16):
    cipherblock = ciphertext[i:i+16]
    partial_plaintext = bytes([a ^ b for (a, b) in zip(ek, cipherblock)])
    recovered_plaintext = bytes(aes.decrypt(partial_plaintext, b"\x00"*16, 16))
    decrypted += recovered_plaintext

print(decrypted)

